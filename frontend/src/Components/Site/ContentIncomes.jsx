 // src/ContentIncomes.jsx
import React, { useState } from 'react';

const ContentIncomes = () => {
  const [isFormOpen, setIsFormOpen] = useState(false);
  const [formData, setFormData] = useState({
    amount: '',
    date: '',
    source: '',
    description: '',
  });
  const [incomes, setIncomes] = useState([
    { id: 1, amount: '500.00', date: '2025-09-08', source: 'Client ABC', description: 'Website development', creationDate: '2025-09-08' },
    { id: 2, amount: '1200.00', date: '2025-09-01', source: 'Company XYZ', description: 'Monthly salary', creationDate: '2025-09-01' },
  ]);

  const incomesColumns = [
    { name: 'Id' },
    { name: 'Amount' },
    { name: 'Date' },
    { name: 'Source' },
    { name: 'Description', optional: true },
    { name: 'Creation Date', autoGenerated: true },
  ];

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const newIncome = {
      id: incomes.length + 1,
      ...formData,
      creationDate: new Date().toISOString().split('T')[0]
    };
    setIncomes([...incomes, newIncome]);
    setIsFormOpen(false);
    setFormData({ amount: '', date: '', source: '', description: '' });
  };

  return (
    <div className="w-full mt-6 flex flex-col items-center p-4">
      {/* Titre du tableau */}
      <h1 className="text-2xl md:text-3xl font-bold mb-6 text-gray-800">
        Income Tracking Table
      </h1>

      {/* Tableau */}
      <div className="w-full md:w-4/5 overflow-auto shadow-lg rounded-lg border border-gray-300">
        <table className="w-full table-auto border-collapse">
          <thead className="bg-gray-200">
            <tr>
              {incomesColumns.map((col, index) => (
                <th
                  key={index}
                  className="p-3 border-b border-gray-300 text-center font-semibold text-sm"
                >
                  {col.name}
                  {col.optional && <span className="text-xs text-gray-500 ml-1">(optional)</span>}
                  {col.autoGenerated && <span className="text-xs text-gray-500 ml-1">(auto)</span>}
                </th>
              ))}
            </tr>
          </thead>
          <tbody className="bg-white">
            {/* Afficher les revenus existants */}
            {incomes.map((income) => (
              <tr key={income.id} className="hover:bg-gray-50">
                <td className="p-3 border-b border-gray-300 text-center">{income.id}</td>
                <td className="p-3 border-b border-gray-300 text-center">${income.amount}</td>
                <td className="p-3 border-b border-gray-300 text-center">{income.date}</td>
                <td className="p-3 border-b border-gray-300 text-center">{income.source}</td>
                <td className="p-3 border-b border-gray-300 text-center">{income.description}</td>
                <td className="p-3 border-b border-gray-300 text-center">{income.creationDate}</td>
              </tr>
            ))}
            
            {/* Ligne du bouton centr√© */}
            <tr>
              <td colSpan={6} className="p-4 text-center relative">
                <button
                  onClick={() => setIsFormOpen(!isFormOpen)}
                  className="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-full shadow-md flex items-center justify-center gap-2 transition-all mx-auto"
                >
                  <span className="text-xl font-bold">+</span>
                  <span>Add Income</span>
                </button>

                {/* Popover du formulaire */}
                {isFormOpen && (
                  <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                    <div className="bg-white rounded-lg p-6 w-full max-w-md mx-4">
                      <h2 className="text-lg font-bold mb-4">Add Income</h2>
                      <form onSubmit={handleSubmit} className="flex flex-col gap-3">
                        <input
                          type="number"
                          name="amount"
                          placeholder="Amount"
                          value={formData.amount}
                          onChange={handleChange}
                          className="border p-2 rounded"
                          required
                          step="0.01"
                          min="0"
                        />
                        <input
                          type="date"
                          name="date"
                          value={formData.date}
                          onChange={handleChange}
                          className="border p-2 rounded"
                          required
                        />
                        <input
                          type="text"
                          name="source"
                          placeholder="Source"
                          value={formData.source}
                          onChange={handleChange}
                          className="border p-2 rounded"
                          required
                        />
                        <input
                          type="text"
                          name="description"
                          placeholder="Description (optional)"
                          value={formData.description}
                          onChange={handleChange}
                          className="border p-2 rounded"
                        />
                        <div className="flex justify-end gap-2 mt-3">
                          <button
                            type="button"
                            onClick={() => setIsFormOpen(false)}
                            className="bg-gray-300 hover:bg-gray-400 text-black px-4 py-2 rounded"
                          >
                            Cancel
                          </button>
                          <button
                            type="submit"
                            className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded"
                          >
                            Save
                          </button>
                        </div>
                      </form>
                    </div>
                  </div>
                )}
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default ContentIncomes;