generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  email      String       @unique
  password   String
  profile    String?
  createdAt  DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime     @updatedAt @db.Timestamptz(6)
  Categories Categories[]
  Expenses   Expenses[]
  Incomes    Incomes[]
}

model Categories {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  budget    Decimal    @db.Decimal
  createdAt DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt DateTime   @updatedAt @db.Timestamptz(6)
  UserId    Int
  Users     Users      @relation(fields: [UserId], references: [id])
  Expenses  Expenses[]
}

model Expenses {
  id          Int        @id @default(autoincrement())
  amount      Decimal    @db.Decimal
  date        DateTime   @db.Timestamptz(6)
  description String?    @db.VarChar(255)
  type        String?    @db.VarChar(255)
  receipt     String?    @db.VarChar(255)
  createdAt   DateTime   @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime   @updatedAt @db.Timestamptz(6)
  UserId      Int
  CategoryId  Int
  Categories  Categories @relation(fields: [CategoryId], references: [id])
  Users       Users      @relation(fields: [UserId], references: [id])
}

model Incomes {
  id          Int      @id @default(autoincrement())
  amount      Decimal  @db.Decimal
  date        DateTime @db.Timestamptz(6)
  description String?  @db.VarChar(255)
  type        String?  @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)
  UserId      Int
  Users       Users    @relation(fields: [UserId], references: [id])
}
