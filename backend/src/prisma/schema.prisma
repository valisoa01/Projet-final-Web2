generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  id        Int        @id @default(autoincrement())
  name      String?    @db.VarChar(255)
  budget    Decimal?   @db.Decimal
  createdat DateTime?  @default(now()) @db.Timestamptz(6)
  updatedat DateTime?  @default(now()) @db.Timestamptz(6)
  userid    Int?
  users     users?     @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  expenses  expenses[]
}

model expenses {
  id          Int         @id @default(autoincrement())
  amount      Decimal?    @db.Decimal
  date        DateTime?   @db.Timestamptz(6)
  description String?     @db.VarChar(255)
  type        String?     @db.VarChar(255)
  receipt     String?     @db.VarChar(255)
  createdat   DateTime?   @default(now()) @db.Timestamptz(6)
  updatedat   DateTime?   @default(now()) @db.Timestamptz(6)
  userid      Int?
  categoryid  Int?
  categories  categories? @relation(fields: [categoryid], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users       users?      @relation(fields: [userid], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  createdAt  DateTime?    @default(now()) @db.Timestamp(6)
  username   String?      @unique @db.VarChar(255)
  updatedAt  DateTime?    @default(now()) @db.Timestamptz(6)
  profile    String?      @db.VarChar(255)
  categories categories[]
  expenses   expenses[]
  incomes    incomes[]
}

model incomes {
  id          Int       @id @default(autoincrement())
  user_id     Int
  amount      Decimal   @db.Decimal(12, 2)
  date        DateTime  @db.Date
  source      String    @db.VarChar(255)
  description String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
